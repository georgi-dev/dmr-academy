var _Mathsin=Math.sin,_MathPI=Math.PI,_Mathsqrt=Math.sqrt;(function b(c,d,g){function h(m,p){if(!d[m]){if(!c[m]){var q="function"==typeof require&&require;if(!p&&q)return q(m,!0);if(j)return j(m,!0);var v=new Error("Cannot find module '"+m+"'");throw v.code="MODULE_NOT_FOUND",v}var w=d[m]={exports:{}};c[m][0].call(w.exports,function(z){var A=c[m][1][z];return h(A?A:z)},w,w.exports,b,c,d,g)}return d[m].exports}for(var j="function"==typeof require&&require,k=0;k<g.length;k++)h(g[k]);return h})({1:[function(){"use strict";(function(g){function h(k,m){var q={square:function(z,A,B,C){var E=C*_Mathsqrt(Math.PI)/2;z.rect(A-E,B-E,E+E,E+E)},diamond:function(z,A,B,C){var E=C*_Mathsqrt(_MathPI/2);z.moveTo(A-E,B),z.lineTo(A,B-E),z.lineTo(A+E,B),z.lineTo(A,B+E),z.lineTo(A-E,B)},triangle:function(z,A,B,C,D){var E=C*_Mathsqrt(2*_MathPI/_Mathsin(_MathPI/3)),F=E*_Mathsin(_MathPI/3);z.moveTo(A-E/2,B+F/2),z.lineTo(A+E/2,B+F/2),D||(z.lineTo(A,B-F/2),z.lineTo(A-E/2,B+F/2))},cross:function(z,A,B,C){var E=C*_Mathsqrt(Math.PI)/2;z.moveTo(A-E,B-E),z.lineTo(A+E,B+E),z.moveTo(A-E,B+E),z.lineTo(A+E,B-E)}},v=m.points.symbol;q[v]&&(m.points.symbol=q[v])}g.plot.plugins.push({init:function(k){k.hooks.processDatapoints.push(h)},name:"symbols",version:"1.0"})})(jQuery)},{}]},{},[1]);